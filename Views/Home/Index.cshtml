@using X.PagedList.Mvc.Core
@using X.PagedList
@using X.PagedList.Web.Common
@using MVCHomework6.Models;
@using MVCHomework6.Data.Database;
@model IEnumerable<Articles>
@{
    ViewData["Title"] = "Home Page";
}

<div class="row">
    <div class="col-8">
        @foreach (var card in Model)
        {
            @Html.Partial("_Card", card)
        }


        @Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new
                                                                        {
                                                                            p = page,
                                                                            query = ViewBag.Query
                                                                        }),
                        new PagedListRenderOptions
                        {
                            UlElementClasses = new[] { "pagination" },
                            LiElementClasses = new[] { "page-item" },
                            PageClasses = new[] { "page-link" },
                            LinkToPreviousPageFormat = "←上一頁",
                            LinkToNextPageFormat = "下一頁→",
                            DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
                            DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
                            DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                            DisplayLinkToNextPage = PagedListDisplayMode.Always,
                        })
        @{
            var pagedInfo = (IPagedList)Model;
        }
    </div>
    <div class="col">
        <div class="card mb-1">
            <div class="card-header">
                Search
            </div>
            <div class="card-body">
                <form method="get" action="@Url.Action("Index", "Home")" id="searchForm">
                    <div class="input-group mb-3">
                        <input type="text" id="searchQuery" name="query" class="form-control" placeholder="Search for..." value="@ViewBag.Query">
                        <button class="btn btn-outline-secondary" type="submit">Go!</button>
                        @* <button type="button" id="clearQuery" class="btn btn-outline-secondary" onclick="clearQuery()" >X</button> <!-- 清除按鈕 --> *@
                    </div>
                </form>
            </div>
        </div>
        <div class="card mb-1">
            <div class="card-header">
                Tags
            </div>
            <div class="card-body">
                <ul class="list-inline">
                    @foreach (var tag in ViewBag.Tags)
                    {
                        <li class="list-inline-item"><button type="button" class="btn">@tag.Tag<span class="badge bg-secondary">@tag.Count</span></button></li>
                    }
                </ul>
            </div>

        </div>
        <div class="card mb-1">
            <div class="card-header">
                Featured
            </div>
            <div class="card-body">
                <h5 class="card-title">Special title treatment</h5>
                <p class="card-text">With supporting text below as a natural lead-in to additional content.</p>
                <a href="#" class="btn btn-primary">Go somewhere</a>
            </div>
        </div>
    </div>
</div>